<?xml version="1.0" encoding="utf-8"?>
<topic id="C73DDB0A-3EC4-4fa4-A341-6A054FDA07DC" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>
        <newTerm>dotNetInstaller</newTerm>, commonly known as <newTerm>DNI</newTerm>, is a general-purpose setup
        bootstrapper for Microsoft Windows.
        <mediaLink>
          <image xlink:href="DotNetInstaller.jpg" />
        </mediaLink>
      </para>
      <para>
        DNI enables the developer to define the application prerequisites and install the correct version(s) of these components
        in a predictable order based on the processor architecture, user operating system type and language, allow the user to
        download these components from the web, install these components directly from a single packaged setup, local media
        or both. DNI is very feature rich and runs on all known Windows operating systems with a very tiny footprint.
      </para>
      <para>
        A boostrapper doesn't replace tools like InstallShield, Wise, Visual Studio Setup and Deployment Project or Wix.
        The goal is to create an application to help users with installing the correct prerequisites. Most real world applications
        need to install several components to work properly, including Windows Service Packs, Internet Explorer, MDAC or .NET Framework.
        This kind of applications is most commonly known as a <newTerm>bootstrapper</newTerm>.
      </para>
      <para>
        This project is composed of the following:
        <list class="bullet">
          <listItem>
            <application>dotNetInstaller</application>: main bootstrapper application, written in Visual Studio 2005 C++. This is the raw setup which
            presents a GUI in front of the user that displays which components to install depending on which components are
            already installed on the operating system. The bootstrapper has no prerequisites.
          </listItem>
          <listItem>
            <application>InstallerEditor</application>: an application for editing configurations files and dotNetInstaller.exe resources, written with
            Visual Studio 2005 C# for .NET Framework 2.0. The editor is also capable of importing older versions of DNI configuration
            files and re-saving them in the current/newer format.
          </listItem>
          <listItem>
            <application>InstallerLinker</application>: a command-line bootstrapper linker that can be used in a build process, written with Visual Studio
            2005 C# for .NET Framework 2.0.
          </listItem>
          <listItem>
            Several samples and dependency templates that can be reused as-is and that demonstrate sometimes complex checks which verify
            whether, for example, MDAC or .NET framework are already installed.
          </listItem>
        </list>
      </para>
      <para>
        This project started as a
        <externalLink>
          <linkUri>http://www.codeproject.com/KB/install/dotNetInstaller.aspx</linkUri>
          <linkText>CodeProject article</linkText>
        </externalLink> and was maintained on the
        <externalLink>
          <linkUri>http://www.devage.com/</linkUri>
          <linkText>DevAge</linkText>
        </externalLink>
        website and
        <externalLink>
          <linkUri>https://sourceforge.net/projects/dotnetinstaller</linkUri>
          <linkText>SourceForge</linkText>
        </externalLink>.
        It's now fully open-sourced and maintained on CodePlex at
        <externalLink>
          <linkUri>http://www.codeplex.com/dotnetinstaller/</linkUri>
          <linkText>http://www.codeplex.com/dotnetinstaller/</linkText>
        </externalLink>.
      </para>
    </introduction>
    <relatedTopics>
      <link topicType_id="1FE70836-AA7D-4515-B54B-E10C4B516E50" xlink:href="a6f46303-b703-4ff3-9572-55d8131eb883" />
    </relatedTopics>
  </developerConceptualDocument>
</topic>