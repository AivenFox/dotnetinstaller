<?xml version="1.0" encoding="utf-8"?>
<topic id="db007eb2-ccc6-4657-843e-adad7da5db5b" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>Components represent artifacts that are installed on a target system.</para>
    </introduction>
    <section address="compoennttypes">
      <title>Component Types</title>
      <content>
        <para>
          dotNetInstaller supports the following component types.
          <list class="bullet">
            <listItem>
              <newTerm>msi</newTerm>: executes a Windows Installer package.
            </listItem>
            <listItem>
              <newTerm>msu</newTerm>: executes a Windows Update package.
            </listItem>
            <listItem>
              <newTerm>cmd</newTerm>: executes a command line.
            </listItem>
            <listItem>
              <newTerm>openfile</newTerm>: executes a file with a shell extension.
            </listItem>
          </list>
        </para>
      </content>
      <section address="msicomponents">
        <title>Windows Installer MSI Components</title>
        <content>
          <para>
            A component of type <literal>msi</literal> that executes a Windows Installer package using the
            <command>msiexec.exe</command> command.
          </para>
        </content>
      </section>
      <section address="msucomponents">
        <title>Windows Update MSU Components</title>
        <content>
          <para>
            A component of type <literal>msu</literal> that executes a Windows Update package using the
            <command>wusa.exe</command> command.
          </para>
        </content>
      </section>
      <section address="commandlinecomponents">
        <title>Command Line Components</title>
        <content>
          <para>
            A component of type <literal>cmd</literal> that executes an arbitrary command.
          </para>
        </content>
      </section>
      <section address="openfilecomponents">
        <title>OpenFile Components</title>
        <content>
          <para>
            A component of type <literal>openfile</literal> that launches a document via a shell extension.
          </para>
        </content>
      </section>
    </section>
    <section address="componentoptions">
      <title>Component Options and Behaviors</title>
      <content>
        <para>
          Components support a rich set of options. Some affect the bootstrapper behavior after the component has been
          installed successfully or unsuccessfully. Please refer to the contextual help when editing
          each component in InstallerEditor.
        </para>
      </content>
    </section>
    <section address="componentoptionsrequired">
      <title>Required Components</title>
      <content>
        <para>
          Components may be <newTerm>required</newTerm> or <newTerm>optional</newTerm>. This is set by the
          <literal>required</literal> option. When a component is required, it must be installed successfully in order
          for the subsequent component to be installed. When a component is optional, the
          <literal>allow_continue_on_failure</literal> option defines the behavior of the bootstrapper following the
          failure. If <literal>allow_continue_on_failure</literal> is <literal>true</literal>, the user is informed
          of the failure with the <literal>failed_exec_command_continue</literal> message and offered a choice whether
          to continue. When <literal>allow_continue_on_failure</literal> is set to <literal>false</literal>, the user
          is informed of the failure with the same <literal>failed_exec_command_continue</literal> message and is returned
          to the bootstrapper where the component list is recalculated.
        </para>
        <para>
          In silent (basic and no UI) installations the behavior is identical, but the choice to continue is made
          automatically for the user when available with the <literal>allow_continue_on_failure</literal> option.
        </para>
      </content>
    </section>
  </developerConceptualDocument>
</topic>