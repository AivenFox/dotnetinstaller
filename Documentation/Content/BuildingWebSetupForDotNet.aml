<?xml version="1.0" encoding="utf-8"?>
<topic id="9ee2c335-6586-4365-a4b0-71befaf996d2" revisionNumber="1">
  <developerHowToDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>
        This tutorial walks through creating a web-based setup to install .NET Framework and a user-defined MSI setup.
        Both the .NET framework and the user-defined MSI are downloaded from your website.
      </para>
    </introduction>
    <procedure>
      <title>Create the support files directory</title>
      <steps class="ordered">
        <step>
          <content>
            <para>
              Create a web site with your MSI package and all the support files, including the .NET Framework,
              for example <fictitiousUri>http://www.mysite.com/MyProduct/</fictitiousUri>.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Copy the directory <localUri>SupportFiles</localUri> that you can find in the dotNetInstaller
              distribution package under <fictitiousUri>http://www.mysite.com/MyProduct/</fictitiousUri>.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              In the SupportFiles replace all the readme.txt files with the real components files that your installation
              requires. For example replace the <localUri>SupportFiles\dotNet\v1.1\English\dotnetfx.exe.readme.txt</localUri>
              with the dotnetfx.exe file that you can download from the microsoft.com website. You can find the url in the
              <localUri>dotnetfx.exe.readme.txt</localUri> file.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Copy your msi package under <fictitiousUri>http://www.mysite.com/MyProduct/</fictitiousUri>.
            </para>
          </content>
        </step>
      </steps>
    </procedure>
    <procedure>
      <title>Create the downloaded configuration file</title>
      <steps class="ordered">
        <step>
          <content>
            <para>
              Run InstallerEditor. Select the menu <ui>File</ui>, <ui>New ...</ui> to create a new configuration.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Select from the menu <ui>Tools</ui>, <ui>Template for New Item</ui> the user interface language that you want.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Right click on the <ui>Config File</ui> node and select <ui>Add</ui>, <ui>Setup Configuration</ui>.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Select the just created <ui>install:</ui> node and customize the properties <ui>dialog_caption</ui>,
              <ui>dialog_message</ui> and <ui>installation_completed</ui> with the name of your application.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Right click on the <ui>install:</ui> node and select <ui>Add</ui>, <ui>Component Wizard ...</ui>.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Select <ui>Microsoft .NET Framework 1.1</ui>, <ui>Downloaded from Internet</ui>, and replace
              <ui>http://www.myWebSite.com/MyApp/SupportFiles</ui> with your web site for example
              <fictitiousUri>http://www.mysite.com/MyProduct/SupportFiles</fictitiousUri>. Click the
              <ui>OK</ui> button to confirm your choices and close the wizard.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Right click on the <ui>install:</ui> node and select <ui>Add</ui>, <ui>Msi Component</ui>.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Select the newly created node and customize the <ui>description</ui> and <ui>package</ui> properties
              with the name of your setup and msi package name. Replace the <localUri>#APPPATH\mysetup.msi</localUri>
              with <localUri>#TEMPPATH\MyApplicationName\mysetup.msi</localUri>, this is download destination of the package.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Right click on the msi component and select <ui>Add</ui>, <ui>Download Dialog</ui>.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Select the newly created node <ui>Download Dialog</ui> and customize the <ui>dialog_caption</ui> and 
              <ui>dialog_message</ui> properties with the name of your application.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Right click on the <ui>Download Dialog</ui> node and select <ui>Add</ui>, <ui>Download File</ui>.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Select the newly created node under <ui>Download Dialog</ui> and customize the <literal>componentname</literal>,
              <literal>destinationpath</literal> and <literla>sourceurl</literla> properties. Note that <literal>destinationapath</literal>
              must be the same path as in the <literal>package</literal> property of the parent component (eg. 
              <localUri>#TEMPPATH\MyApplicationName\</localUri>). The <literal>sourceurl</literal> is the location on your website
              (eg. <fictitiousUri>http://www.mysite.com/MyProduct/mysetup.msi</fictitiousUri>).
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Select the menu <ui>File</ui>, <ui>Save</ui>, give your configuration a name (eg. <localUri>configuration.xml</localUri>)
              and copy it under <fictitiousUri>http://www.mysite.com/MyProduct/</fictitiousUri>.
            </para>
          </content>
        </step>
      </steps>
    </procedure>
    <procedure>
      <title>Create the bootstrapper</title>
      <steps class="ordered">
        <step>
          <content>
            <para>
              Create a bitmap (banner.bmp 110x208 pixels) with the logo of your application in a folder called
              <literal>MyWebSetup</literal>.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Execute InstallerEditor. Select the menu <ui>File</ui>, <ui>New ...</ui> and create a new file with
              the name <ui>configuration.xml</ui> in the folder <localUri>MyWebSetup</localUri>.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Select from the menu <ui>Tools</ui>, <ui>Template for New Item</ui> the user interface language that you want.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Right click on the <ui>Config File</ui> node and select <ui>Add</ui>, <ui>Web Configuration</ui>.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Select the just created node <literal>reference:</literal> and customize the properties <literal>referencefile</literal>
              for example write <literal>#TEMPPATH\MyApplicationName\configuration.xml</literal>.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Select the node <ui>Download Dialog</ui> under <literal>reference:</literal> and customize the
              <literal>dialog_caption</literal> and <literal>dialog_message</literal> properties.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Right click on the <ui>Download Dialog</ui> node and select <ui>Add</ui>, <ui>Download File</ui>.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Select the newly created node under <ui>Download Dialog</ui> and customize the <literal>componentname</literal>
              <literal>sourceurl</literal> and <literal>destinationpath</literal> properties. The <literal>sourceurl</literal>
              is the location of previously created configuration file (eg. 
              <fictitiousUri>http://www.mysite.com/MyProduct/configuration.xml</fictitiousUri>) while the 
              <literal>destinationpath</literal> is a local temporary directory (eg. 
              <literal>#TEMPPATH\MyApplicationName</literal>).
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Select the menu <ui>File</ui>, <ui>Save</ui> and place the <localUri>configuration.xml</localUri> file under
              <ui>MyWebSetup</ui>.
            </para>
          </content>
        </step>
        <step>
          <content>
            <para>
              Copy <localUri>dotNetInstaller.exe</localUri> from the distribution package into <localUri>MyWebSetup</localUri>.
              You may call this file <localUri>setup.exe</localUri>.
            </para>
          </content>
        </step>
      </steps>
    </procedure>
    <section id="conclusion">
      <title>Conclusion</title>
      <content>
        <para>
          The distribution package contains a reference to a configuration placed on a website. The configuration file is downloaded
          and the software described in it is installed. The runtime setup workflow is illustrated below.
          <mediaLink>
            <image xlink:href="WebSetup.jpg" />
          </mediaLink>
        </para>
      </content>
    </section>
  </developerHowToDocument>
</topic>