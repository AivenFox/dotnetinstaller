<?xml version="1.0" encoding="utf-8"?>
<topic id="1aa2140c-f65d-4aac-83a4-b86a3a554525" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>
        dotNetInstaller reads all the captions and messages from the configuration file.
        Therefore, you can create installations in any language. In addition, dotNetInstaller allows you to define
        different configurations depending on the LCID of the target system. You can present an Italian installer
        on an Italian operating system and an English installer on all the other OSs.
      </para>
    </introduction>
    <section address="selectinglcid">
      <title>Selecting an LCID</title>
      <content>
        <para>
          You can define the <literal>lcid</literal> property of a configuration to set its <newTerm>Locale ID</newTerm>.
          A locale is either a language or a language in combination with a country. For example, a value of <literal>1033</literal>
          identifies <newTerm>English (United States)</newTerm>, while <literal>1049</literal> identifies <newTerm>Russian</newTerm>.
          See <externalLink>
            <linkText>this page</linkText>
            <linkUri>http://msdn.microsoft.com/en-us/library/0h88fahh(VS.85).aspx</linkUri>
          </externalLink> for a table of LCID values.
        </para>
        <alert class="important">
          <para>
            dotNetInstaller will produce an error and exit when it fails to identify an acceptable configuration. Hence, when defining
            localized configuration it's important to either create one configuration without an <literal>lcid</literal>
            value for all other locales or use a <literal>!</literal> operator. For example, your setup can have two configurations
            <literal>1040</literal> and <literal>!1040</literal>.
          </para>
        </alert>
        <para>
          dotNetInstaller obtains the system's LCID via one of the following configurable methods. Set the <literal>lcidtype</literal>
          property of the configuration file to one of these values.
          <tableDefinition>
            <definedTerm>UserExe</definedTerm>
            <definition>
              Obtain the LCID from the language information in the FileVersionInfo of User.exe by calling GetFileVersionInfo,
              and then VerQueryValue (on \VarFileInfo\Translation") on the VersionInfo block of the operating system's User.exe.
              This method works on all versions of Windows and is described in
              <externalLink>
                <linkText>KB181604</linkText>
                <linkUri>http://support.microsoft.com/kb/q181604/</linkUri>
              </externalLink>.
            </definition>
            <definedTerm>System</definedTerm>
            <definition>System default LCID using GetSystemDefaultLCID.</definition>
            <definedTerm>User</definedTerm>
            <definition>
              User default LCID using GetUserDefaultLCID. The user-defined language identifier of the operating system can be
              set by using the Regional Settings option in Control Panel.
            </definition>
          </tableDefinition>
        </para>
      </content>
    </section>
    <section address="builtintemplates">
      <title>Built-In Templates</title>
      <content>
        <para>
          With <application>InstallerEditor</application> you can create installations in custom languages using template files.
          There are four default templates embedded for English, French, German and Italian. The editor can be configured to
          use one of these files so, when you create new items in the editor, default values are read from the template
          selected. Choose your language under <ui>Tools</ui>, <ui>Template for New Item</ui>.
        </para>
        <para>
          You can create new templates. Choose <ui>Tools, Customize Templates</ui> menu item to add additional templates.
          You can create your custom template files following the xml structure of one of the existing files.
        </para>
      </content>
    </section>
    <section address="utf8unicode">
      <title>UTF-8 and Unicode</title>
      <content>
        <para>
          To fully support non-English languages the configuration file uses UTF-8 encoding.
        </para>
        <alert class="note">
          <para>
            Unicode character set is not supported on Windows 95, 98 and ME. If you plan to run instlalations on one of
            these operating system you must copy the Microsoft Layer for Unicode (<localUri>unicows.dll</localUri>) in
            the same path as <localUri>dotNetInstaller.exe</localUri>.
          </para>
          <para>
            See <externalLink>
              <linkUri>http://msdn.microsoft.com/en-us/library/ms812865.aspx</linkUri>
              <linkText>Microsoft Layer for Unicode on Windows 95/98/Me Systems</linkText>
            </externalLink>
            for more information.
          </para>
        </alert>
      </content>
    </section>
  </developerConceptualDocument>
</topic>