<?xml version="1.0" encoding="utf-8"?>
<topic id="1aa2140c-f65d-4aac-83a4-b86a3a554525" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>
        dotNetInstaller reads all the captions and messages from configuration files.
        Therefore, you can create installations in any language. In addition, dotNetInstaller
        allows you to define different configurations depending on the locale of the target system,
        of the currently logged-in user or let the user choose the installation language. You can also present
        an Italian installer on an Italian operating system and an English installer on all the other systems.
      </para>
    </introduction>
    <section address="lcid_filter">
      <title>Filtering by LCID</title>
      <content>
        <para>
          You can define the <literal>lcid_filter</literal> property of a configuration to set its <newTerm>Locale ID</newTerm>.
          A locale is either a language or a language in combination with a country. For example, a value of <literal>1033</literal>
          identifies <newTerm>English (United States)</newTerm>, while <literal>1049</literal> identifies <newTerm>Russian</newTerm>.
          See <externalLink>
            <linkText>this page</linkText>
            <linkUri>http://msdn.microsoft.com/en-us/library/0h88fahh(VS.85).aspx</linkUri>
          </externalLink> for a table of LCID values.
        </para>
        <alert class="important">
          <para>
            dotNetInstaller will produce an error and exit when it fails to identify an acceptable configuration. Hence, when defining
            localized configuration it's important to either create one configuration without an <literal>lcid</literal>
            value for all other locales or use a <literal>!</literal> operator. For example, your setup can have two configurations
            <literal>1040</literal> and <literal>!1040</literal>.
          </para>
        </alert>
        <para>
          dotNetInstaller obtains the system's LCID via one of the following configurable methods. Set the <literal>lcidtype</literal>
          property of the configuration file to one of these values.
          <tableDefinition>
            <definedTerm>UserExe</definedTerm>
            <definition>
              Obtain the LCID from the language information in the FileVersionInfo of User.exe by calling GetFileVersionInfo,
              and then VerQueryValue (on \VarFileInfo\Translation") on the VersionInfo block of the operating system's User.exe.
              This method works on all versions of Windows and is described in
              <externalLink>
                <linkText>KB181604</linkText>
                <linkUri>http://support.microsoft.com/kb/q181604/</linkUri>
              </externalLink>.
            </definition>
            <definedTerm>System</definedTerm>
            <definition>System default LCID using GetSystemDefaultLCID.</definition>
            <definedTerm>User</definedTerm>
            <definition>
              User default LCID using GetUserDefaultLCID. The user-defined language identifier of the operating system can be
              set by using the Regional Settings option in Control Panel.
            </definition>
          </tableDefinition>
        </para>
      </content>
    </section>
    <section address="lcid_choose">
      <title>Enabling User Selection of Language</title>
      <content>
        <para>
          dotNetInstaller is capable of presenting a dialog in the beginning of an installation and let the user
          choose the installation language.
          <mediaLink>
            <image xlink:href="LanguageSelector.jpg" />
          </mediaLink>
        </para>
        <para>
          In order to enable this behavior you must set the
          <literal>show_language_selector</literal> property at the top-level and the following
          properties in each individual configuration.
          <tableDefinition>
            <definedTerm>language_id</definedTerm>
            <definition>
              The actual locale ID at the configuration level. This is usually different from <literal>lcid_filter</literal>
              and represents the language of the text in this configuration. For example, <literal>1033</literal>
              identifies English and <literal>1049</literal> identifies Russian.
            </definition>
            <definedTerm>language</definedTerm>
            <definition>
              A string representing the language of the configuration. This value appears in the user selection
              drop-down list.
            </definition>
          </tableDefinition>
        </para>
        <para>
          Additional options, specifically <literal>language_selector_title</literal>,
          <literal>language_selector_ok</literal> and <literal>language_selector_cancel</literal> options
          allow controlling some aspects of the language selection dropdown.
        </para>
      </content>
    </section>
    <section address="builtintemplates">
      <title>Built-In Templates</title>
      <content>
        <para>
          With <application>InstallerEditor</application> you can create installations in custom languages using template files.
          There are four default templates embedded for English, French, German and Italian. The editor can be configured to
          use one of these files so, when you create new items in the editor, default values are read from the template
          selected. Choose your language under <ui>Tools</ui>, <ui>Template for New Item</ui>.
        </para>
        <para>
          You can create new templates. Choose <ui>Tools, Customize Templates</ui> menu item to add additional templates.
          You can create your custom template files following the xml structure of one of the existing files.
        </para>
      </content>
    </section>
    <section address="utf8unicode">
      <title>UTF-8 and Unicode</title>
      <content>
        <para>
          To fully support non-English languages the configuration file uses UTF-8 encoding.
        </para>
        <alert class="note">
          <para>
            Unicode character set is not supported on Windows 95, 98 and ME.
            The Microsoft Layer for Unicode (<localUri>unicows.dll</localUri>) is required
            if you plan to run installations on one of these operating systems. dotNetInstaller
            has an embedded <localUri>unicows.dll</localUri> that it writes to the TEMP
            directory. In order to disable this behavior, copy <localUri>unicows.dll</localUri>
            in the same path as <localUri>dotNetInstaller.exe</localUri>.
          </para>
          <para>
            See <externalLink>
              <linkUri>http://msdn.microsoft.com/en-us/library/ms812865.aspx</linkUri>
              <linkText>Microsoft Layer for Unicode on Windows 95/98/Me Systems</linkText>
            </externalLink>
            for more information.
          </para>
        </alert>
      </content>
    </section>
  </developerConceptualDocument>
</topic>