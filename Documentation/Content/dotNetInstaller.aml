<?xml version="1.0" encoding="utf-8"?>
<topic id="59204cba-278b-4648-a149-35f864cae8cf" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>
        <application>dotNetInstaller.exe</application> is a <literal>bootstrapper</literal>, a lightweight driver for
        your setup process. Simply put, this is your <command>setup.exe</command>. It offers a user interface, progress,
        status, supports silent installs and enables user selection of optional components. The workflow is highly flexible
        and the UI can be somewhat customized.
      </para>
    </introduction>
    <section address="commandlinearguments">
      <title>Command Line Arguments</title>
      <content>
        <para>
          <definitionTable>
            <definedTerm>/? or /help</definedTerm>
            <definition>
              Display a help screen.
            </definition>
            <definedTerm>/ConfigFile [path]</definedTerm>
            <definition>
              Optional configuration file name and location, defaults to configuration.xml in the
              same location as the dotNetInstaller executable.
            </definition>
            <definedTerm>/i</definedTerm>
            <definition>
              Install components (default).
            </definition>
            <definedTerm>/x</definedTerm>
            <definition>
              Uninstall components.
            </definition>
            <definedTerm>/q</definedTerm>
            <definition>
              Forces silent UI mode, overriding the configuration's <literal>ui_mode</literal> attribute.
            </definition>
            <definedTerm>/qb</definedTerm>
            <definition>
              Forces basic UI mode, overriding the configuration's <literal>ui_mode</literal> attribute.
              A basic UI mode shows progress dialogs but does not require any user interaction.
            </definition>
            <definedTerm>/nq</definedTerm>
            <definition>
              Forces full UI mode, overriding the configuration's <literal>ui_mode</literal> attribute.
            </definition>
            <definedTerm>/CompleteCommandArgs</definedTerm>
            <definition>
              Specify additional arguments for the <literal>complete_command</literal>.
              For example, if your complete command is an MSI this lets you pass additional parameters.
            </definition>
            <definedTerm>/Log</definedTerm>
            <definition>
              Creates a log file during installation with information and errors useful for debugging. You can find this file in
              the user temporary directory with the name <localUri>dotNetInstallerLog.txt</localUri> (eg.
              <localUri>C:\Documents and Settings\YOUR_NAME\Local Settings\Temp\dotNetInstallerLog.txt</localUri>).
              Its location and name can be specified with <system>/LogFile</system>.
            </definition>
            <definedTerm>/LogFile [path]</definedTerm>
            <definition>Optional log file name and location.</definition>
            <definedTerm>/ExtractCab</definedTerm>
            <definition>
              If this package contains an embedded CABs, extract all contents under a new folder called
              SupportFiles in the current directory. When specified, all other options are ignored and no installations are run.
            </definition>
            <definedTerm>/DisplayCab</definedTerm>
            <definition>
              If this package contains an embedded CAB, display its contents.
            </definition>
            <definedTerm>/DisplayConfig</definedTerm>
            <definition>
              Display the complete list of configurations and components without checking processor architecture or lcid.
            </definition>
            <definedTerm>/ComponentArgs "description":"value"</definedTerm>
            <definition>
              <para>
                Additional component parameters. This enables passing additional command-line arguments to specific components.
                The value is appended to both non-silent and silent command lines of <literal>msi</literal> and <literal>cmd</literal>
                type components. The component description must match exactly the one in the configuration.xml.
              </para>
              <alert class="note">
                <para>
                  Note that if multiple components are declared with the same description the command applies to all.
                  Component arguments applied to components that don't exist are ignored.
                </para>
              </alert>
            </definition>
            <definedTerm>/ControlArgs "description":"value"</definedTerm>
            <definition>
              <para>
                Additional user-defined control parameters. This enables overriding user control values.
              </para>
              <alert class="note">
                <para>
                  Note that if multiple user controls are declared with the same id the parameter applies to all.
                  Control arguments applied to user controls that don't exist are ignored.
                </para>
              </alert>
            </definition>
            <definedTerm>/Launcher [Program Path]</definedTerm>
            <definition>
              <para>
                This is obsolete.
              </para>
              <para>
                If an install requires a reboot and then a resumption of dotNetInstaller, this argument specifies the
                path to a different program to execute after the system boots back up. If the path contains spaces, the path must
                be enclosed in double quotes. This argument is especially useful if dotNetInstaller has been distributed as
                part of a self-extracting executable (SFX) package.
              </para>
            </definition>
            <definedTerm>/LauncherArgs [Program Arguments]</definedTerm>
            <definition>
              <para>
                This is obsolete.
              </para>
              <para>
                Used in conjunction with the /Launcher argument above; specified command-line arguments to be
                used with the /Launcher argument's command.
              </para>
              <alert class="note">
                <para>
                  If LauncherArgs contains spaces, the argument string must be enclosed in quotes. If the LauncherArgs begin with
                  a "-" or "/", the argument string Must be enclosed in quotes. Must include a space between the opening quotes and
                  the first argument character (e.g. enter the argument as " /q" instead of "/q" [note the difference in spacing]).
                </para>
              </alert>
            </definition>
          </definitionTable>
        </para>
      </content>
    </section>
    <section address="errorlevels">
      <title>Return Codes</title>
      <content>
        <para>
          <definitionTable>
            <definedTerm>0</definedTerm>
            <definition>Success.</definition>
            <definedTerm>-1</definedTerm>
            <definition>Any non-specific error.</definition>
            <definedTerm>-2</definedTerm>
            <definition>
              User pressed <ui>Cancel</ui> in the main dialog.
            </definition>
            <definedTerm>Any other non-zero value</definedTerm>
            <definition>
              Error code of a failed component. This is the <command>msiexec</command> return code for
              <literal>msi</literal> components and process exit code for <literal>cmd</literal> components.
            </definition>
          </definitionTable>
        </para>
      </content>
    </section>
  </developerConceptualDocument>
</topic>